#
#  Copyright (c) 2022 gematik GmbH
#  
#  Licensed under the EUPL, Version 1.2 or â€“ as soon they will be approved by
#  the European Commission - subsequent versions of the EUPL (the Licence);
#  You may not use this work except in compliance with the Licence.
#  You may obtain a copy of the Licence at:
#  
#      https://joinup.ec.europa.eu/software/page/eupl
#  
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the Licence is distributed on an "AS IS" basis,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the Licence for the specific language governing permissions and
#  limitations under the Licence.
#  
#

###################################################
# General Service Definition
###################################################

version: "3.9"

###################################################
# Definition of common settings across services
###################################################

# Common Service Properties
x-service-setup: &service-setup-ref
  restart: always

# Common Volume Properties
x-volume-config: &volume-setup-ref
  volumes:
    - demis-config-volume:/app/config:rw

# Common Environment Configuration Properties
x-env-config: &environment-config-ref
  CONFIGURATION_PATH: /app/config

# Common Environment Timezone Entry
x-environment-timezone: &environment-timezone-ref
  TZ: Europe/Berlin

# Common Health Check Properties
x-healthcheck-config: &healthcheck-ref
  interval: 15s
  timeout: 10s
  retries: 20
  start_period: 30s

###################################################
# Definition of services
###################################################
services:

  # DEMIS Configuration Files - The image is terminated immediately, it serves as data container

  demis-config-data:
    image: gematik1/demis-configuration-test:1.6.4
    restart: "no"
    <<: *volume-setup-ref

  keycloak:
    image: gematik1/demis-keycloak:2.0.0
    <<: *service-setup-ref
    <<: *volume-setup-ref
    ports:
      - "9081:8080"
    container_name: demis-keycloak
    environment:
      TZ: Europe/Berlin
      LANG: de_DE.UTF-8
      CERT_HOST: localhost
      PROXY_ADDRESS_FORWARDING: 'true'
      DB_VENDOR: POSTGRES
      DB_ADDR: demis-postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: F9A4nUr4bcyEtjFEdHjW
      reschedule: on-node-failure
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8080/auth || exit 1" ]
      interval: 10s
      timeout: 3s
      retries: 300
    networks:
      - demis-network

  postgresDemis:
    image: gematik1/demis-postgres:1.8.3
    <<: *service-setup-ref
    <<: *volume-setup-ref
    container_name: demis-postgres
    environment:
      - TZ=Europe/Berlin
      - POSTGRES_PASSWORD=demis
      - PGDATA=demis_database
    networks:
      - demis-network

  nginx:
    image: gematik1/demis-nginx:1.8.2
    <<: *service-setup-ref
    <<: *volume-setup-ref
    ports:
      - "7080:80"
      - "7443:443"
    container_name: demis-nginx
    environment:
      <<: *environment-timezone-ref
    depends_on:
      - notification-entry-service
      - pseudonymization-service
      - postgresDemis
      - keycloak
    networks:
      demis-network:
        aliases:
          - demis.gematik.de

  storage-service:
    image: gematik1/demis-storage:1.8.6
    <<: *service-setup-ref
    <<: *volume-setup-ref
    container_name: demis-storage-service
    environment:
      <<: *environment-timezone-ref
    depends_on:
      keycloak:
        condition: service_healthy
      postgresDemis:
        condition: service_started
    networks:
      - demis-network

  doublette-detection-services:
    image: gematik1/demis-doublette-detection:1.9.2
    <<: *service-setup-ref
    <<: *volume-setup-ref
    container_name: demis-doublette-detection-service
    environment:
      <<: *environment-timezone-ref
    depends_on:
      keycloak:
        condition: service_healthy
      postgresDemis:
        condition: service_started
    networks:
      - demis-network

  pseudonymization-service:
    image: gematik1/demis-pseudonymization:1.8.7
    <<: *service-setup-ref
    <<: *volume-setup-ref
    container_name: demis-pseudonymization-service
    environment:
      <<: *environment-timezone-ref
    depends_on:
      keycloak:
        condition: service_healthy
      postgresDemis:
        condition: service_started
    networks:
      - demis-network

  notification-clearing-api:
    image: gematik1/demis-notification-clearing-api:1.13.0
    <<: *service-setup-ref
    <<: *volume-setup-ref
    container_name: demis-notification-clearing-api
    environment:
      - HAPI_OIDC_ISSUER=https://localhost:7443/auth/realms/OEGD
      - HAPI_SERVER_ADDRESS=https://localhost:7443/notification-clearing-api/fhir/
    depends_on:
      keycloak:
        condition: service_healthy
      postgresDemis:
        condition: service_started
    networks:
      - demis-network

  notification-entry-service:
    image: gematik1/demis-notification-entry-service:1.0.7
    <<: *service-setup-ref
    <<: *volume-setup-ref
    container_name: demis-notification-entry-service
    environment:
      - HAPI_OIDC_ISSUER=https://localhost:7443/auth/realms/LAB,https://localhost:7443/auth/realms/HOSPITAL
    depends_on:
      keycloak:
        condition: service_healthy
      postgresDemis:
        condition: service_started
    networks:
      - demis-network

  pdf-generation-service:
    image: gematik1/demis-pdf-generation:1.10.0
    <<: *service-setup-ref
    <<: *volume-setup-ref
    container_name: demis-pdf-generation-service
    depends_on:
      keycloak:
        condition: service_healthy
      postgresDemis:
        condition: service_started
      demis-config-data:
        condition: service_started
    networks:
      - demis-network
    environment:
      <<: *environment-config-ref
      <<: *environment-timezone-ref

  validation-service:
    image: gematik1/demis-validation-service:1.0.0
    <<: *service-setup-ref
    ports:
      - "8092:8092"
    container_name: demis-validation-service
    environment:
      TZ: Europe/Berlin
      SERVER_PORT: 8092
    networks:
      - demis-network

  hospital-location-service:
    image: gematik1/demis-hospital-location-service:1.0.1
    <<: *service-setup-ref
    ports:
      - "8091:8091"
    container_name: demis-hospital-location-service
    environment:
      TZ: Europe/Berlin
      SERVER_PORT: 8091
    networks:
      - demis-network

  report-processing-service:
    image: gematik1/demis-report-processing-service:1.0.0
    <<: *service-setup-ref
    ports:
      - "8090:8090"
    container_name: demis-report-processing-service
    environment:
      TZ: Europe/Berlin
      SERVER_PORT: 8090
      DEMIS_IDP_CLIENT_ID: notification-entry-service
      DEMIS_IDP_ALLOWED_ROLES: disease-notification-sender
      DEMIS_IDP_PUBLIC_KEY_LOCATION: http://demis-keycloak:8080/auth/realms/HOSPITAL/protocol/openid-connect/certs
      DEMIS_NETWORK_VALIDATION_SERVICE_ADDRESS: http://demis-validation-service:8092
      DEMIS_NETWORK_NOTIFICATION_CLEARING_API_ADDRESS: http://demis-notification-clearing-api:8080/notification-clearing-api/fhir
      DEMIS_NETWORK_HOSPITAL_LOCATION_SERVICE_ADDRESS: http://demis-hospital-location-service:8091
      DEMIS_NETWORK_PDFGEN_SERVICE_ADDRESS: http://demis-pdfgen-service:8093
      HLS_VALIDATION_GATEWAY_VALUE: demis-gateway
      HLS_VALIDATION_GATEWAY_KEY: azp
      NCS_APIKEY: aad3f9f00390689324a7f49c4e908fcf981dfa0563b857196e7ececf5f1eb0ea
    networks:
      - demis-network

  pdfgen-service:
    image: gematik1/demis-pdfgen-service:1.0.0
    <<: *service-setup-ref
    ports:
      - "8093:8093"
    container_name: demis-pdfgen-service
    environment:
      TZ: Europe/Berlin
      SERVER_PORT: 8093
    networks:
      - demis-network

# Network definition
networks:
  demis-network:
    name: demis-network

# Volume definition
volumes:
  demis-config-volume:
